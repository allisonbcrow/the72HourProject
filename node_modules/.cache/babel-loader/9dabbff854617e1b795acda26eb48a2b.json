{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NASA = props => {\n  _s();\n\n  const [NASAImg, setNASAImg] = useState('');\n\n  function getNASAImg() {\n    const baseURL = \"https://api.nasa.gov/planetary/earth/imagery/date?api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\"; // const key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0'\n\n    const testURL = \"https://api.nasa.gov/planetary/earth/imagery?lon=100.75&lat=1.5&date=2014-02-01&api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n    fetch(testURL).then(res => setNASAImg(res.url));\n  }\n\n  useEffect(() => {\n    getNASAImg();\n  }, []);\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const latlon = lat + lng;\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.getCurrentPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        height: 190,\n        width: 190\n      },\n      src: NASAImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NASA, \"x2i0xMB/IAT/oyiIMB/9UJqIuYM=\");\n\n_c = NASA;\nexport default NASA;\n\nvar _c;\n\n$RefreshReg$(_c, \"NASA\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","useState","useEffect","NASA","props","NASAImg","setNASAImg","getNASAImg","baseURL","testURL","fetch","then","res","url","lat","setLat","lng","setLng","status","setStatus","latlon","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AACF,WAASM,UAAT,GAAsB;AAGlB,UAAMC,OAAO,GAEb,oGAFA,CAHkB,CAMlB;;AAEA,UAAMC,OAAO,GACb,kIADA;AAGAC,IAAAA,KAAK,CAACD,OAAD,CAAL,CACCE,IADD,CACOC,GAAD,IAASN,UAAU,CAACM,GAAG,CAACC,GAAL,CADzB;AAGD;;AAECX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMmB,MAAM,GAAEN,GAAG,GAAGE,GAApB;;AACA,QAAMK,WAAW,GAAG,MAAM;AACtB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AACxBJ,MAAAA,SAAS,CAAC,8CAAD,CAAT;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACAG,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,QAAAA,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAV,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACH,OAJD,EAIG,MAAM;AACLT,QAAAA,SAAS,CAAC,kCAAD,CAAT;AACH,OAND;AAOH;AACJ,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAZ;AAAwC,MAAA,GAAG,EAAEzB;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAML,CA/CD;;GAAMF,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst NASA = (props) => {\n    const [NASAImg, setNASAImg] = useState('');\n  function getNASAImg() {\n\n      \n      const baseURL =\n      \n      \"https://api.nasa.gov/planetary/earth/imagery/date?api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n      // const key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0'\n      \n      const testURL =\n      \"https://api.nasa.gov/planetary/earth/imagery?lon=100.75&lat=1.5&date=2014-02-01&api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n      \n      fetch(testURL) \n      .then((res) => setNASAImg(res.url));\n      \n    }\n\n      useEffect(() => {\n          getNASAImg()\n      }, []);\n\n      const [lat, setLat] = useState(null);\n      const [lng, setLng] = useState(null);\n      const [status, setStatus] = useState(null);\n      const latlon= lat + lng;\n      const getLocation = () => {\n          if (!navigator.geolocation) {\n              setStatus('Geolocation is not supported by your browser');\n          } else {\n              setStatus('Locating...');\n              navigator.geolocation.getCurrentPosition((position) => {\n                  setStatus(null);\n                  setLat(position.coords.latitude);\n                  setLng(position.coords.longitude);\n              }, () => {\n                  setStatus('Unable to retrieve your location');\n              });\n          }\n      }\n\n      return (\n        <div>\n          <img style={{height: 190, width: 190} } src={NASAImg} />\n          \n        </div>\n      );\n};\n\nexport default NASA;\n"]},"metadata":{},"sourceType":"module"}