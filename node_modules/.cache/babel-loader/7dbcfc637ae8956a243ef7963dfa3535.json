{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { geolocated } from 'react-geolocated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nfunction NASA({\n  keywordStore,\n  coords\n}) {\n  _s();\n\n  const [Intialized, setIntialized] = useState(false);\n}\n\n_s(NASA, \"8wD7vlpG/mwe08niskEymlWjEJA=\");\n\n_c = NASA;\n\nconst getSatellite = async () => {\n  const {\n    latitude,\n    longitude\n  } = coords;\n  const {\n    data\n  } = await (latitude, longitude);\n  const keyword = (data.results[0].address_components.find(c => c.types.includes(\"locality\")) || {}).long_name;\n  localStorage.setItem(\"keyword\", keyword);\n  keywordStore.setKeyword(keyword);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: getSatellite,\n        children: \"Get Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(NASA);\n\nvar _c;\n\n$RefreshReg$(_c, \"NASA\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","useState","geolocated","baseURL","key","NASA","keywordStore","coords","Intialized","setIntialized","getSatellite","latitude","longitude","data","keyword","results","address_components","find","c","types","includes","long_name","localStorage","setItem","setKeyword","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAG,8CAAhB;AACA,MAAMC,GAAG,GAAG,yEAAZ;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAd,EAAwC;AAAA;;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACH;;GAFQI,I;;KAAAA,I;;AAIT,MAAMK,YAAY,GAAG,YAAY;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BL,MAAhC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAW,OAAOF,QAAQ,EAAEC,SAAjB,CAAjB;AACA,QAAME,OAAO,GAAG,CACZD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,kBAAhB,CAAmCC,IAAnC,CAAwCC,CAAC,IACrCA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiB,UAAjB,CADJ,KAES,EAHG,EAINC,SAJV;AAKQC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCT,OAAhC;AACAR,EAAAA,YAAY,CAACkB,UAAb,CAAwBV,OAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEJ,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlBT;;AAoBA,eAAeR,UAAU,CAAC;AACtBuB,EAAAA,eAAe,EAAE;AACbC,IAAAA,kBAAkB,EAAE;AADP,GADK;AAItBC,EAAAA,mBAAmB,EAAE;AAJC,CAAD,CAAV,CAKXtB,IALW,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { geolocated } from 'react-geolocated';\n\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nfunction NASA({ keywordStore, coords }) {\n    const [Intialized, setIntialized] = useState(false);\n}\n\nconst getSatellite = async () => { \n    const { latitude, longitude } = coords;\n    const { data } = await (latitude, longitude);\n    const keyword = (\n        data.results[0].address_components.find(c =>\n            c.types.includes(\"locality\")\n            ) || {}\n            ).long_name;\n            localStorage.setItem(\"keyword\", keyword);\n            keywordStore.setKeyword(keyword);\n            \n            return (\n                <div className=\"main\">\n                    <div className=\"mainDiv\">\n                        <button type=\"button\" onClick={getSatellite} >Get Image</button>\n                    </div>\n                </div>\n            );\n        };\n    \nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: false\n    },\n    userDecisionTimeout: 5000\n}) (NASA);"]},"metadata":{},"sourceType":"module"}