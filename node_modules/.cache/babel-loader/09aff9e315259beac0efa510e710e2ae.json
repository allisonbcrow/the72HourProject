{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\";\nimport React, { Component } from 'react'; // import { geolocated } from 'react-geolocated';\n\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://api.nasa.gov/planetary/earth/apod?api_key=';\nconst api_key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0';\n\nconst fetchNASA = async () => {\n  try {\n    const response = await fetch(`${baseURL}${api_key}`);\n    const data = await response.json();\n    console.log('NASA data', data); // displayData(data)\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfetchNASA(); // fetch(baseURL)\n// .then(response => response.json())\n// .then(json => console.log(json));\n\nclass NASA extends Component {\n  constructor(props, date, token) {\n    super(props, date, token);\n    this.state = {\n      date: date\n    };\n  }\n\n  //  fetchResults = () => {\n  //      let url = `${baseURL}?api-key=${key}`;\n  //      fetch(url)\n  //      .then(res => res.json())\n  //      .then(json => this.setState({ date: json.data }))\n  //      .catch(err => console.log(err));\n  //  };\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(NASA, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\nexport default NASA; // function NASA({ coords }) {\n//     const [Intialized, setIntialized] = useState(false);\n// }\n// const getSatellite = async () => { \n//     const { latitude, longitude } = coords;\n//     const { data } = await (latitude, longitude);\n//     const keyword = (\n//         data.results[0].address_components.find(c =>\n//             c.types.includes(\"locality\")\n//             ) || {}\n//             ).long_name;\n//             localStorage.setItem(\"keyword\", keyword);\n//             // keywordStore.setKeyword(keyword);\n//             return (\n//                 <div className=\"main\">\n//                     <div className=\"mainDiv\">\n//                         <button type=\"button\" onClick={getSatellite} >Get Image</button>\n//                     </div>\n//                 </div>\n//             );\n//         };\n// export default geolocated({\n//     positionOptions: {\n//         enableHighAccuracy: false\n//     },\n//     userDecisionTimeout: 5000\n// }) (NASA);","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","Component","render","baseURL","api_key","fetchNASA","response","fetch","data","json","console","log","error","NASA","constructor","props","date","token","state","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAG,oDAAhB;AACA,MAAMC,OAAO,GAAG,0CAAhB;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC1B,MAAI;AACJ,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,GAAEC,OAAQ,EAAtB,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAzB,EAHI,CAIJ;AACD,GALC,CAKA,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACC;AACJ,CATD;;AAWAP,SAAS,G,CAET;AACA;AACA;;AAEA,MAAMQ,IAAN,SAAmBZ,SAAnB,CAA6B;AAEzBa,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqB;AAC5B,UAAMF,KAAN,EAAaC,IAAb,EAAmBC,KAAnB;AACA,SAAKC,KAAL,GAAa;AAAEF,MAAAA,IAAI,EAAEA;AAAR,KAAb;AACN;;AAGF;AACA;AAEA;AACA;AACA;AACA;AACA;AAIAG,EAAAA,iBAAiB,GAAG;AACbC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1Db,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BY,QAAQ,CAACC,MAAT,CAAgBC,QAA7C;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AACH,KAHC;AAIF;;AAGJxB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD;;AAlCyB;;AAqC7BA,MAAM,eAAC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAWyB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAAN;AAEA,eAAef,IAAf,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\n// import { geolocated } from 'react-geolocated';\nimport {render} from \"react-dom\";\n\nconst baseURL = 'https://api.nasa.gov/planetary/earth/apod?api_key=';\nconst api_key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0'\n\nconst fetchNASA = async () => {\n    try {\n    const response = await fetch(`${baseURL}${api_key}`)\n    const data = await response.json()\n    console.log('NASA data', data)\n    // displayData(data)\n  } catch (error) {\n    console.log(error);\n    }\n}\n\nfetchNASA();\n\n// fetch(baseURL)\n// .then(response => response.json())\n// .then(json => console.log(json));\n\nclass NASA extends Component {\n    \n    constructor(props, date, token) {\n        super(props, date, token);\n        this.state = { date: date };  \n };\n\n\n//  fetchResults = () => {\n//      let url = `${baseURL}?api-key=${key}`;\n     \n//      fetch(url)\n//      .then(res => res.json())\n//      .then(json => this.setState({ date: json.data }))\n//      .catch(err => console.log(err));\n//  };\n\n\n\ncomponentDidMount() {\n       navigator.geolocation.getCurrentPosition(function(position) {\n         console.log(\"Latitude is :\", position.coords.latitude);\n         console.log(\"Longitude is :\", position.coords.longitude);\n     })\n    }\n\n \n render() {\n  \n     return (\n         <div>\n          {/* <img src={this.state.date } /> */}\n         </div>\n     );\n   }\n}\n\nrender(<NASA />, document.getElementById(\"root\"));\n\nexport default NASA;\n\n\n// function NASA({ coords }) {\n//     const [Intialized, setIntialized] = useState(false);\n// }\n\n// const getSatellite = async () => { \n//     const { latitude, longitude } = coords;\n//     const { data } = await (latitude, longitude);\n//     const keyword = (\n//         data.results[0].address_components.find(c =>\n//             c.types.includes(\"locality\")\n//             ) || {}\n//             ).long_name;\n//             localStorage.setItem(\"keyword\", keyword);\n//             // keywordStore.setKeyword(keyword);\n            \n//             return (\n//                 <div className=\"main\">\n//                     <div className=\"mainDiv\">\n//                         <button type=\"button\" onClick={getSatellite} >Get Image</button>\n//                     </div>\n//                 </div>\n//             );\n//         };\n    \n// export default geolocated({\n//     positionOptions: {\n//         enableHighAccuracy: false\n//     },\n//     userDecisionTimeout: 5000\n// }) (NASA);"]},"metadata":{},"sourceType":"module"}