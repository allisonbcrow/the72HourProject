{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [temp, setTemp] = useState(main.data.temp);\n  const [unit, setUnit] = useState('');\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      const newNum = temp * 1.8 + 32;\n      setTemp(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      const newNum = (temp - 32) * 5 / 9;\n      setTemp(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  const getLonLat = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\n      });\n    }\n  };\n\n  const data = e => {\n    e.preventDefault();\n    fetch(url).then(response => response.json()).then(result => {\n      setLocalweather(result);\n      setQuery(\"\");\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getLonLat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \"Temperature \", props.temp, \" \", props.unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convert,\n        children: [\"Convert to \", oppositeUnit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: [props.newNum, props.unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  };\n}\n\n_s(Weather, \"kdFn72FCmD4VRLLvcPT8/Tp2Khc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","props","temp","setTemp","main","data","unit","setUnit","oppositeUnit","convert","newNum","Math","round","getLonLat","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","console","log","API_KEY","url","e","preventDefault","fetch","then","response","json","result","setLocalweather","setQuery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACM,IAAI,CAACC,IAAL,CAAUH,IAAX,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,YAAY,GAAGF,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAA1C;;AAEA,QAAMG,OAAO,GAAG,MAAM;AAClB,QAAIH,IAAI,KAAK,GAAb,EAAkB;AACd,YAAMI,MAAM,GAAGR,IAAI,GAAG,GAAP,GAAa,EAA5B;AACAC,MAAAA,OAAO,CAACQ,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAD,CAAP;AACAH,MAAAA,OAAO,CAACC,YAAD,CAAP;AACH;;AAED,QAAIF,IAAI,KAAK,GAAb,EAAkB;AACd,YAAMI,MAAM,GAAI,CAACR,IAAI,GAAG,EAAR,IAAc,CAAf,GAAoB,CAAnC;AACAC,MAAAA,OAAO,CAACQ,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAD,CAAP;AACAH,MAAAA,OAAO,CAACC,YAAD,CAAP;AACH;AACJ,GAZD;;AAcA,QAAMK,SAAS,GAAG,MAAM;AACtB,QAAGC,SAAS,CAACC,WAAb,EAA0B;AACxBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,cAAMO,OAAO,GAAG,kCAAhB;AACA,cAAMC,GAAG,GAAI,uDAAsDL,GAAI,QAAOH,GAAI,uBAAsBO,OAAQ,EAAhH;AACD,OAPD;AAQD;AACF,GAXD;;AAaA,QAAMpB,IAAI,GAAIsB,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZC,MAAAA,eAAe,CAACD,MAAD,CAAf;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KALL;AAOF,wBACI;AAAA,8BACI;AAAA,gCACA;AAAQ,UAAA,OAAO,EAAEtB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADA,kBAEiBZ,KAAK,CAACC,IAFvB,OAE8BD,KAAK,CAACK,IAFpC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,OAAO,EAAEG,OAAjB;AAAA,kCAAsCD,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,mBAAyBP,KAAK,CAACS,MAA/B,EAAuCT,KAAK,CAACK,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYC,GArBD;AAqBE;;GAtDGN,O;;KAAAA,O;AA4DT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Weather(props) {\r\n    const [temp, setTemp] = useState(main.data.temp);\r\n    const [unit, setUnit] = useState('');\r\n    \r\n    const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n    \r\n    const convert = () => {\r\n        if (unit === \"C\") {\r\n            const newNum = temp * 1.8 + 32;\r\n            setTemp(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    \r\n        if (unit === \"F\") {\r\n            const newNum = ((temp - 32) * 5) / 9;\r\n            setTemp(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    };\r\n    \r\n    const getLonLat = () => {\r\n      if(navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const lon = position.coords.longitude;\r\n          const lat = position.coords.latitude;\r\n          console.log(lat);\r\n          console.log(lon);\r\n          const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n          const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\r\n        })\r\n      }\r\n    };\r\n\r\n    const data = (e) => {\r\n      e.preventDefault()\r\n      fetch(url)\r\n          .then(response => response.json())\r\n          .then(result => {\r\n              setLocalweather(result)\r\n              setQuery(\"\")\r\n          })\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n            <button onClick={getLonLat}></button>\r\n                Temperature {props.temp} {props.unit}\r\n            </p>\r\n            <button onClick={convert}>Convert to {oppositeUnit}</button>\r\n            <span className=\"value\">{props.newNum}{props.unit}</span>\r\n  \r\n        </div>\r\n  \r\n      )\r\n    }}\r\n\r\n\r\n\r\n\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}