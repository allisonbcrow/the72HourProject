{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst GeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation is not supported on your browser\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n\n_s(GeoLocation, \"vGXYaEcDUXR+lwTcu1wAbr51fiA=\");\n\n_c = GeoLocation;\nexport default GeoLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoLocation\");","map":{"version":3,"sources":["C:/Users/mmrah/OneDrive/Desktop/ElevenFiftyProjects/Blue/blue-badge-folder-setup-2/the72HourProject/src/components/concepts/Geolocation.js"],"names":["React","useState","useEffect","GeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","navigator","code","message","geolocation","getCurrentPosition"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACrCK,IAAAA,MAAM,EAAE,KAD6B;AAErCC,IAAAA,WAAW,EAAE;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,GAAG,EAAE;AAAf;AAFwB,GAAD,CAAxC;;AAKA,QAAMC,SAAS,GAAGN,QAAQ,IAAI;AAC1BC,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADZ;AAETH,QAAAA,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;AAFZ;AAFL,KAAD,CAAX;AAOH,GARD;;AAUA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBV,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE,IADA;AAERS,MAAAA;AAFQ,KAAD,CAAX;AAIH,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,EAAE,iBAAiBc,SAAnB,CAAH,EAAkC;AAC9BF,MAAAA,OAAO,CAAC;AACJG,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAD,CAAP;AAKH;;AAEDF,IAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCV,SAAzC,EAAoDI,OAApD;AACH,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOV,QAAP;AACH,CApCD;;GAAMD,W;;KAAAA,W;AAuCL,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst GeoLocation = () => {\r\n    const [location, setLocation] = useState({ \r\n        loaded: false,\r\n        coordinates: {lat: \"\", lng: \"\"}\r\n    });\r\n\r\n    const onSuccess = location => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        });\r\n    };\r\n\r\n    const onError = error => {\r\n        setLocation({\r\n            loaded: true,\r\n            error,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!(\"geolocation\" in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: \"Geolocation is not supported on your browser\"\r\n            });\r\n           \r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, []);\r\n\r\n    return location;\r\n}\r\n\r\n\r\n export default GeoLocation"]},"metadata":{},"sourceType":"module"}