{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\concepts\\\\Geolocation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Geolocation = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log('latitude is: ', position.coords.latitude);\n      console.log('longitude is: ', position.coords.longitude);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  const getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n};\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/concepts/Geolocation.js"],"names":["React","Geolocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","getPosition","Promise","resolve","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAElB,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACKC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,MAAT,CAAgBC,QAA7C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,MAAT,CAAgBE,SAA9C;AACD,KAJL;AASJ,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAMP;;AAAA;;AAED,QAAMC,WAAW,GAAG,MAAM;AACtB,WAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CZ,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCS,OAAzC,EAAkDC,MAAlD;AACD,KAFM,CAAP;AAGD,GAJH;AAKC,CAzBD;;KAAMb,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Geolocation = () => {\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                  console.log('latitude is: ', position.coords.latitude);\r\n                  console.log('longitude is: ', position.coords.longitude);\r\n                }\r\n              );\r\n\r\n    \r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\nconst getPosition = () => {\r\n    return new Promise(function (resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n  }\r\n};\r\n\r\nexport default Geolocation;\r\n\r\n"]},"metadata":{},"sourceType":"module"}