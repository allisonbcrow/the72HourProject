{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\";\nimport React, { Component } from 'react'; // import { geolocated } from 'react-geolocated';\n\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery/date';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nclass NASA extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchResults = () => {\n      let url = `${baseURL}?api-key=${key}`;\n      fetch(url).then(res => res.json()) //  .then(json => this.setState({ date: json.data }))\n      .catch(err => console.log(err));\n    };\n\n    this.state = {\n      date: []\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.fetchResults(this.state)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(NASA, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\nexport default NASA; // function NASA({ coords }) {\n//     const [Intialized, setIntialized] = useState(false);\n// }\n// const getSatellite = async () => { \n//     const { latitude, longitude } = coords;\n//     const { data } = await (latitude, longitude);\n//     const keyword = (\n//         data.results[0].address_components.find(c =>\n//             c.types.includes(\"locality\")\n//             ) || {}\n//             ).long_name;\n//             localStorage.setItem(\"keyword\", keyword);\n//             // keywordStore.setKeyword(keyword);\n//             return (\n//                 <div className=\"main\">\n//                     <div className=\"mainDiv\">\n//                         <button type=\"button\" onClick={getSatellite} >Get Image</button>\n//                     </div>\n//                 </div>\n//             );\n//         };\n// export default geolocated({\n//     positionOptions: {\n//         enableHighAccuracy: false\n//     },\n//     userDecisionTimeout: 5000\n// }) (NASA);","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","Component","render","baseURL","key","NASA","constructor","props","fetchResults","url","fetch","then","res","json","catch","err","console","log","state","date","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAG,mDAAhB;AACA,MAAMC,GAAG,GAAG,yEAAZ;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAEzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMtBC,YANsB,GAMP,MAAM;AACjB,UAAIC,GAAG,GAAI,GAAEN,OAAQ,YAAWC,GAAI,EAApC;AAEAM,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAED;AAFC,OAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd;AAIH,KAbqB;;AAEf,SAAKG,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AACN;;AAYDC,EAAAA,iBAAiB,GAAG;AACdC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DR,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,QAAQ,CAACC,MAAT,CAAgBC,QAA7C;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AACH,KAHC;AAIF;;AAGJzB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACC;AAAK,QAAA,GAAG,EAAE,KAAKM,YAAL,CAAkB,KAAKU,KAAvB;AAAV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD;;AA/ByB;;AAkC7BhB,MAAM,eAAC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAW0B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAAN;AAEA,eAAexB,IAAf,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\n// import { geolocated } from 'react-geolocated';\nimport {render} from \"react-dom\";\n\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery/date';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nclass NASA extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { date: [] };  \n };\n\n\n fetchResults = () => {\n     let url = `${baseURL}?api-key=${key}`;\n     \n     fetch(url)\n     .then(res => res.json())\n    //  .then(json => this.setState({ date: json.data }))\n     .catch(err => console.log(err));\n };\n\n componentDidMount() {\n       navigator.geolocation.getCurrentPosition(function(position) {\n         console.log(\"Latitude is :\", position.coords.latitude);\n         console.log(\"Longitude is :\", position.coords.longitude);\n     });\n    };\n\n \n render() {\n     return (\n         <div>\n          <img src={this.fetchResults(this.state) } />\n         </div>\n     );\n   }\n}\n\nrender(<NASA />, document.getElementById(\"root\"));\n\nexport default NASA;\n\n\n// function NASA({ coords }) {\n//     const [Intialized, setIntialized] = useState(false);\n// }\n\n// const getSatellite = async () => { \n//     const { latitude, longitude } = coords;\n//     const { data } = await (latitude, longitude);\n//     const keyword = (\n//         data.results[0].address_components.find(c =>\n//             c.types.includes(\"locality\")\n//             ) || {}\n//             ).long_name;\n//             localStorage.setItem(\"keyword\", keyword);\n//             // keywordStore.setKeyword(keyword);\n            \n//             return (\n//                 <div className=\"main\">\n//                     <div className=\"mainDiv\">\n//                         <button type=\"button\" onClick={getSatellite} >Get Image</button>\n//                     </div>\n//                 </div>\n//             );\n//         };\n    \n// export default geolocated({\n//     positionOptions: {\n//         enableHighAccuracy: false\n//     },\n//     userDecisionTimeout: 5000\n// }) (NASA);"]},"metadata":{},"sourceType":"module"}