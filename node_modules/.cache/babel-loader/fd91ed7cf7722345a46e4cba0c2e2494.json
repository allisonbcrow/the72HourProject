{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n  const [localweather, setLocalweather] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [temp1, setTemp1] = React.useState('');\n  const [temp2, setTemp2] = React.useState('');\n  const [unit, setUnit] = React.useState(\"C\");\n  console.log(temp1);\n  console.log(temp2);\n\n  const getLonLat = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(result => {\n          setLocalweather(result);\n          return;\n        }).catch(err => console.log(err));\n      });\n    }\n  };\n\n  useEffect(() => {\n    getLonLat();\n  }, []);\n\n  const searchInput = e => {\n    e.preventDefault();\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(result => {\n      setLocalweather(result);\n      setQuery(\"\");\n    }).catch(err => console.log(err));\n  };\n\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      const newNum = temp1 * 1.8 + 32;\n      setTemp1(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      const newNum = (temp2 - 32) * 5 / 9;\n      setTemp2(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  function WeatherDisplay(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature \", props.localweather.main && props.localweather.main.temp, \" \", props.unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.convert,\n        children: [\"Convert to \", props.oppositeUnit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: [props.newNum, props.unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n    localweather: localweather,\n    getLonLat: getLonLat,\n    searchInput: searchInput,\n    setQuery: setQuery,\n    convert: convert,\n    oppositeUnit: oppositeUnit,\n    temp1: temp1,\n    temp2: temp2,\n    unit: unit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"FC8GpYWU5DIvTCTzD3nRkoBJKdk=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","API_KEY","localweather","setLocalweather","query","setQuery","temp1","setTemp1","temp2","setTemp2","unit","setUnit","console","log","getLonLat","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","fetch","then","response","json","result","catch","err","searchInput","e","preventDefault","oppositeUnit","convert","newNum","Math","round","WeatherDisplay","props","main","temp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Weather() {\r\n    const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n    const [localweather, setLocalweather] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [temp1, setTemp1] = React.useState('');\r\n    const [temp2, setTemp2] = React.useState('');\r\n    const [unit, setUnit] = React.useState(\"C\");\r\nconsole.log(temp1)\r\nconsole.log(temp2)\r\n\r\n    const getLonLat = () => {\r\n        if(navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const lon = position.coords.longitude;\r\n                const lat = position.coords.latitude;\r\n                fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        setLocalweather(result)\r\n                        return;\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            })\r\n}\r\n}\r\n\r\nuseEffect(() => {\r\n    getLonLat();\r\n}, [])\r\n\r\n\r\n    const searchInput = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setLocalweather(result)\r\n                setQuery(\"\")\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n    const convert = () => {\r\n        if (unit === \"C\") {\r\n            const newNum = temp1 * 1.8 + 32;\r\n            setTemp1(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n\r\n        if (unit === \"F\") {\r\n            const newNum = ((temp2 - 32) * 5) / 9;\r\n            setTemp2(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    };\r\n\r\n    function WeatherDisplay(props) {\r\n      return (\r\n   <div>\r\n              <p>\r\n                  Temperature {props.localweather.main && props.localweather.main.temp} {props.unit}\r\n              </p>\r\n              <button onClick={props.convert}>Convert to {props.oppositeUnit}</button>\r\n              <span className=\"value\">{props.newNum}{props.unit}</span>\r\n          </div>\r\n      )\r\n  }\r\n  \r\n    return (\r\n        <WeatherDisplay \r\n        localweather={localweather}\r\n        getLonLat={getLonLat} \r\n        searchInput={searchInput} \r\n        setQuery={setQuery}\r\n        convert={convert}\r\n        oppositeUnit={oppositeUnit}\r\n        temp1={temp1}\r\n        temp2={temp2}\r\n        unit={unit}\r\n        />\r\n    )\r\n\r\n}\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}