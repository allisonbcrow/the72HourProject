{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n  const [localweather, setLocalweather] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [temp, setTemp] = useState(0);\n  const [unit, setUnit] = useState(\"C\");\n  const [newNum1, setNewNum1] = useState('');\n  const [newNum2, setNewNum2] = useState('');\n\n  const getLonLat = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude; // .then(response => response.json())\n        // .then(result => {\n        //   let response =  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\n        //   let data = response.json();\n        //   setLocalweather(data.main.temp);\n        //   return;\n      });\n\n      let fetchURL = async () => {\n        let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n        let data = await response.json();\n        setLocalweather(data.main.temp);\n      }; // .catch(err => console.log(err));\n\n    }\n  };\n}\n\n_s(Weather, \"EDokLb9EYEShWC3bnNzhtcAKyK0=\");\n\n_c = Weather;\nuseEffect(() => {\n  getLonLat();\n}, []);\n\nconst searchInput = e => {\n  e.preventDefault();\n  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(result => {\n    setLocalweather(result);\n    setQuery(\"\");\n  }).catch(err => console.log(err));\n};\n\nconst oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\nconst convert = () => {\n  if (unit === \"C\") {\n    const newNum = temp * 1.8 + 32;\n    setTemp(Math.round(newNum1));\n    setUnit(oppositeUnit);\n  }\n\n  if (unit === \"F\") {\n    const newNum = (temp - 32) * 5 / 9;\n    setTemp(Math.round(newNum2));\n    setUnit(oppositeUnit);\n  }\n};\n\nfunction WeatherDisplay(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature \", props.data.main.temp, \" \", props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.convert,\n      children: [\"Convert to \", props.oppositeUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"value\",\n      children: [props.newNum1 && props.newNum2, props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = WeatherDisplay;\nexport default Weather;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"WeatherDisplay\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","API_KEY","localweather","setLocalweather","query","setQuery","temp","setTemp","unit","setUnit","newNum1","setNewNum1","newNum2","setNewNum2","getLonLat","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","fetchURL","response","fetch","data","json","main","searchInput","e","preventDefault","then","result","catch","err","console","log","oppositeUnit","convert","newNum","Math","round","WeatherDisplay","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Weather() {\r\n    const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n    const [localweather, setLocalweather] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [temp, setTemp] = useState(0);\r\n    const [unit, setUnit] = useState(\"C\");\r\n    const [newNum1, setNewNum1] = useState('');\r\n    const [newNum2, setNewNum2] = useState('');\r\n    \r\n    const getLonLat = () => {\r\n      if(navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const lon = position.coords.longitude;\r\n          const lat = position.coords.latitude;\r\n          // .then(response => response.json())\r\n          // .then(result => {\r\n          //   let response =  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n          //   let data = response.json();\r\n          //   setLocalweather(data.main.temp);\r\n          //   return;\r\n          })\r\n\r\n          let fetchURL = async () => {\r\n            let response = await  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n            let data = await response.json();\r\n            setLocalweather(data.main.temp);\r\n          };\r\n\r\n          // .catch(err => console.log(err));\r\n        }\r\n      }\r\n    }\r\n\r\nuseEffect(() => {\r\n    getLonLat();\r\n}, [])\r\n\r\n\r\n    const searchInput = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setLocalweather(result)\r\n                setQuery(\"\")\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n    const convert = () => {\r\n        if (unit === \"C\") {\r\n            const newNum = temp * 1.8 + 32;\r\n            setTemp(Math.round(newNum1));\r\n            setUnit(oppositeUnit);\r\n        }\r\n\r\n        if (unit === \"F\") {\r\n            const newNum = ((temp - 32) * 5) / 9;\r\n            setTemp(Math.round(newNum2));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    };\r\n\r\n    function WeatherDisplay(props) {\r\n      return (\r\n   <div>\r\n              <p>\r\n                  Temperature {props.data.main.temp} {props.unit}\r\n              </p>\r\n              <button onClick={props.convert}>Convert to {props.oppositeUnit}</button>\r\n              <span className=\"value\">{props.newNum1 && props.newNum2}{props.unit}</span>\r\n\r\n        {/* <WeatherDisplay \r\n        localweather={localweather}\r\n        getLonLat={getLonLat} \r\n        searchInput={searchInput} \r\n        setQuery={setQuery}\r\n        convert={convert}\r\n        oppositeUnit={oppositeUnit}\r\n        temp={temp}\r\n        unit={unit}\r\n        /> */}\r\n\r\n        </div>\r\n\r\n      )}\r\n\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}