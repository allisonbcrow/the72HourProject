{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmrah\\\\OneDrive\\\\Desktop\\\\ElevenFiftyProjects\\\\Blue\\\\blue-badge-folder-setup-2\\\\the72HourProject\\\\src\\\\components\\\\apps\\\\Ticketmaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ticketmaster = () => {\n  _s();\n\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const latlon = lat + lng;\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.getCurrentPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n    }\n  };\n\n  fetch('https://app.ticketmaster.com/discovery/v2/events.json?apikey=0ps2AGABt3YGhVyPttfk6QbywhTcsVUT').then(response => response.json()).then(data => console.log(data)); // .then(function(response) {\n  //     return response.json();\n  // })\n  // .then(function(json) {\n  //     const eventItems = json.results;\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocation,\n      children: \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), lat && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this), lng && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Events Near You:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Ticketmaster, \"hE8zokPMCLWpC8jNhVBxs8GN+Js=\");\n\n_c = Ticketmaster;\nexport default Ticketmaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ticketmaster\");","map":{"version":3,"sources":["C:/Users/mmrah/OneDrive/Desktop/ElevenFiftyProjects/Blue/blue-badge-folder-setup-2/the72HourProject/src/components/apps/Ticketmaster.js"],"names":["React","useState","useEffect","Ticketmaster","lat","setLat","lng","setLng","status","setStatus","latlon","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","response","json","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMS,MAAM,GAAEN,GAAG,GAAGE,GAApB;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACtB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AACxBJ,MAAAA,SAAS,CAAC,8CAAD,CAAT;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACAG,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,QAAAA,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAV,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACH,OAJD,EAIG,MAAM;AACLT,QAAAA,SAAS,CAAC,kCAAD,CAAT;AACH,OAND;AAOH;AACJ,GAbD;;AAeAU,EAAAA,KAAK,CAAC,+FAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFd,EArBuB,CAwBvB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEZ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKJ,GAAG,iBAAI;AAAA,+BAAcA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJZ,EAKKE,GAAG,iBAAI;AAAA,gCAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,eACC;AAAA,wBAAKiB,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7CD;;GAAMpB,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst Ticketmaster = () => {\r\n    const [lat, setLat] = useState(null);\r\n    const [lng, setLng] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const latlon= lat + lng;\r\n\r\n    const getLocation = () => {\r\n        if (!navigator.geolocation) {\r\n            setStatus('Geolocation is not supported by your browser');\r\n        } else {\r\n            setStatus('Locating...');\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                setStatus(null);\r\n                setLat(position.coords.latitude);\r\n                setLng(position.coords.longitude);\r\n            }, () => {\r\n                setStatus('Unable to retrieve your location');\r\n            });\r\n        }\r\n    }\r\n\r\n    fetch('https://app.ticketmaster.com/discovery/v2/events.json?apikey=0ps2AGABt3YGhVyPttfk6QbywhTcsVUT')\r\n    .then(response => response.json())\r\n    .then(data => console.log(data));\r\n    // .then(function(response) {\r\n    //     return response.json();\r\n    // })\r\n    // .then(function(json) {\r\n    //     const eventItems = json.results;\r\n    // })\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <h1>Coordinates</h1>\r\n            <button onClick={getLocation}>Get Location</button>\r\n            <p>{status}</p>\r\n            {lat && <p>Latitude: {lat}</p>}\r\n            {lng && <p>Longitude: {lng}</p>}\r\n            <br />\r\n            <br />\r\n            <div><h1>Events Near You:</h1>\r\n             <p> {data}</p> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ticketmaster;\r\n\r\n"]},"metadata":{},"sourceType":"module"}