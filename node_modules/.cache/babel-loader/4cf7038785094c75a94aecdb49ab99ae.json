{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\concepts\\\\Geolocation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Geolocation = async (latitude, longitude) => {\n  const api_call = await fetch(`//api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`);\n  const data = await api_call.json();\n  this.setState({\n    lat: latitude,\n    lon: longitude,\n    city: data.name,\n    temperatureC: Math.round(data.main.temp),\n    temperatureF: Math.round(data.main.temp * 1.8 + 32),\n    icon: data.weather[0].icon,\n    sunrise: moment.unix(data.sys.sunrise).format(\"hh:mm a\"),\n    sunset: moment.unix(data.sys.sunset).format(\"hh:mm a\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/concepts/Geolocation.js"],"names":["React","Geolocation","latitude","longitude","api_call","fetch","process","env","REACT_APP_WEATHER_API_KEY","data","json","setState","lat","lon","city","name","temperatureC","Math","round","main","temp","temperatureF","icon","weather","sunrise","moment","unix","sys","format","sunset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA+B;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAgDH,QAAS,QAAOC,SAAU,UAASG,OAAO,CAACC,GAAR,CAAYC,yBAA0B,eAA3H,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AAEA,OAAKC,QAAL,CAAc;AACZC,IAAAA,GAAG,EAAEV,QADO;AAEZW,IAAAA,GAAG,EAAEV,SAFO;AAGZW,IAAAA,IAAI,EAAEL,IAAI,CAACM,IAHC;AAIZC,IAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUC,IAArB,CAJF;AAKZC,IAAAA,YAAY,EAAEJ,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUC,IAAV,GAAiB,GAAjB,GAAuB,EAAlC,CALF;AAMZE,IAAAA,IAAI,EAAEb,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBD,IANV;AAOZE,IAAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYjB,IAAI,CAACkB,GAAL,CAASH,OAArB,EAA8BI,MAA9B,CAAqC,SAArC,CAPG;AAQZC,IAAAA,MAAM,EAAEJ,MAAM,CAACC,IAAP,CAAYjB,IAAI,CAACkB,GAAL,CAASE,MAArB,EAA6BD,MAA7B,CAAoC,SAApC;AARI,GAAd;AAYI,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMP,CAtBD;;KAAM3B,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Geolocation = async (latitude, longitude) => {\r\n    const api_call = await fetch(`//api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`);\r\n    const data = await api_call.json();\r\n    \r\n    this.setState({\r\n      lat: latitude,\r\n      lon: longitude,\r\n      city: data.name,\r\n      temperatureC: Math.round(data.main.temp),\r\n      temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n      icon: data.weather[0].icon,\r\n      sunrise: moment.unix(data.sys.sunrise).format(\"hh:mm a\"),\r\n      sunset: moment.unix(data.sys.sunset).format(\"hh:mm a\"),\r\n    })\r\n  \r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\n\r\nexport default Geolocation;"]},"metadata":{},"sourceType":"module"}