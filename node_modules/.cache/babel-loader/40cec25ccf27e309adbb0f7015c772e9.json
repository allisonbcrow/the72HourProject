{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [localweather, setLocalweather] = useState('');\n  const [query, setQuery] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [unit, setUnit] = useState('C');\n  let [responseObj, setResponseObj] = useState({});\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(response => {\n          //  setResponseObj(response)\n          console.log(response);\n          setTemp(response.main.temp);\n        });\n      });\n    }\n  }, []);\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      setTemp((temp * 9 / 5 + 32).toFixed(0));\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      setTemp(((temp - 32) * 5 / 9).toFixed(0));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your Temperature!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert,\n      children: [\"Convert to \\xB0\", oppositeUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"value\",\n      children: [Math.round(temp), \"\\xB0\", unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Weather;\n\n_s(Weather, \"s9CqNcs56KEEId2/M7q70p2jXhA=\");\n\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["Weather","props","localweather","setLocalweather","useState","query","setQuery","temp","setTemp","unit","setUnit","responseObj","setResponseObj","useEffect","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","console","log","API_KEY","fetch","then","response","json","main","oppositeUnit","convert","toFixed","Math","round"],"mappings":";;;;;AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,GAAD,CAAhC;AACA,MAAI,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA5C;AAIFS,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,cAAMO,OAAO,GAAG,kCAAhB;AACAC,QAAAA,KAAK,CAAE,uDAAsDL,GAAI,QAAOH,GAAI,uBAAsBO,OAAQ,EAArG,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEEF,IAFF,CAEOC,QAAQ,IAAI;AACf;AACCL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACApB,UAAAA,OAAO,CAACoB,QAAQ,CAACE,IAAT,CAAcvB,IAAf,CAAP;AACH,SANF;AAOL,OAbG;AAaD;AAAC,GAfK,EAgBR,EAhBQ,CAAT;AAoBA,QAAMwB,YAAY,GAAGtB,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAA1C;;AAIA,QAAMuB,OAAO,GAAG,MAAM;AACpB,QAAIvB,IAAI,KAAK,GAAb,EAAkB;AAChBD,MAAAA,OAAO,CAAC,CAAED,IAAI,GAAG,CAAP,GAAS,CAAV,GAAe,EAAhB,EAAoB0B,OAApB,CAA4B,CAA5B,CAAD,CAAP;AACAvB,MAAAA,OAAO,CAACqB,YAAD,CAAP;AACD;;AAKD,QAAItB,IAAI,KAAK,GAAb,EAAkB;AAChBD,MAAAA,OAAO,CAAC,CAAC,CAACD,IAAI,GAAG,EAAR,IAAe,CAAf,GAAiB,CAAlB,EAAqB0B,OAArB,CAA6B,CAA7B,CAAD,CAAP;AACAvB,MAAAA,OAAO,CAACqB,YAAD,CAAP;AACD;AACF,GAbD;;AAgBI,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA,oCAAuCD,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,iBAA0BG,IAAI,CAACC,KAAL,CAAW5B,IAAX,CAA1B,UAA8CE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;;KA3DQT,O;;GAAAA,O;;AA6DP,eAAeA,OAAf","sourcesContent":["function Weather(props) {\r\n  const [localweather, setLocalweather] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  const [temp, setTemp] = useState(0);\r\n  const [unit, setUnit] = useState('C');\r\n  let [responseObj, setResponseObj] = useState({});\r\n\r\n   \r\n\r\nuseEffect(() => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const lon = position.coords.longitude;\r\n      const lat = position.coords.latitude;\r\n      console.log(lat);\r\n      console.log(lon);\r\n      const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n      .then(response => response.json())\r\n       .then(response => {\r\n          //  setResponseObj(response)\r\n           console.log(response)\r\n           setTemp(response.main.temp)\r\n       })\r\n})}}\r\n,[])\r\n\r\n            \r\n\r\nconst oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n \r\n\r\nconst convert = () => {\r\n  if (unit === \"C\") {\r\n    setTemp(((temp * 9/5) + 32).toFixed(0));\r\n    setUnit(oppositeUnit);\r\n  }\r\n\r\n\r\n\r\n\r\n  if (unit === \"F\") {\r\n    setTemp(((temp - 32) *  5/9).toFixed(0));\r\n    setUnit(oppositeUnit);\r\n  }\r\n};\r\n\r\n\r\n    return (\r\n      <div id=\"weather\">\r\n\r\n        <p>Your Temperature!</p>\r\n        <button onClick={convert}>Convert to °{oppositeUnit}</button>\r\n        <span className=\"value\">{(Math.round(temp))}°{unit}</span>\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n  export default Weather;\r\n\r\n"]},"metadata":{},"sourceType":"module"}