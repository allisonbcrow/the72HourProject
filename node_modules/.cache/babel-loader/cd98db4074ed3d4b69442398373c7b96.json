{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NASA = props => {\n  _s();\n\n  const [NASAImg, setNASAImg] = useState(\"\");\n\n  function getNASAImg() {\n    // const baseURL =\n    //   \"https://api.nasa.gov/planetary/earth/imagery/date?api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n    // const key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0'\n    const testURL = \"https://api.nasa.gov/planetary/earth/imagery?lon=100.75&lat=1.5&date=2014-02-01&api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n    fetch(testURL).then(res => setNASAImg(res.url));\n  }\n\n  useEffect(() => {\n    getNASAImg();\n  }, []);\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const latlon = lat + lng;\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by your browser\");\n    } else {\n      setStatus(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n      }, () => {\n        setStatus(\"Unable to retrieve your location\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        height: 190,\n        width: 190\n      },\n      src: NASAImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), lat && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this), lng && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NASA, \"dloWbBm7ikZrH7RwYoDqBTA8yJM=\");\n\n_c = NASA;\nexport default NASA;\n\nvar _c;\n\n$RefreshReg$(_c, \"NASA\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","useState","useEffect","NASA","props","NASAImg","setNASAImg","getNASAImg","testURL","fetch","then","res","url","lat","setLat","lng","setLng","status","setStatus","latlon","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AACA,WAASM,UAAT,GAAsB;AACpB;AACA;AACA;AAEA,UAAMC,OAAO,GACX,kIADF;AAGAC,IAAAA,KAAK,CAACD,OAAD,CAAL,CAAeE,IAAf,CAAqBC,GAAD,IAASL,UAAU,CAACK,GAAG,CAACC,GAAL,CAAvC;AACD;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMkB,MAAM,GAAGN,GAAG,GAAGE,GAArB;;AACA,QAAMK,WAAW,GAAG,MAAM;AACxB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AAC1BJ,MAAAA,SAAS,CAAC,8CAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACAG,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,QAAAA,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAV,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACD,OALH,EAME,MAAM;AACJT,QAAAA,SAAS,CAAC,kCAAD,CAAT;AACD,OARH;AAUD;AACF,GAhBD;;AAkBA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAyC,MAAA,GAAG,EAAExB;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIY;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGJ,GAAG,iBAAI;AAAA,+BAAcA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHV,EAIGE,GAAG,iBAAI;AAAA,gCAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/CD;;GAAMZ,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst NASA = (props) => {\n  const [NASAImg, setNASAImg] = useState(\"\");\n  function getNASAImg() {\n    // const baseURL =\n    //   \"https://api.nasa.gov/planetary/earth/imagery/date?api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n    // const key = '26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0'\n\n    const testURL =\n      \"https://api.nasa.gov/planetary/earth/imagery?lon=100.75&lat=1.5&date=2014-02-01&api_key=26NGKr0DLIKJVwuABhcPReibvZd7oV2EqeQ3xSR0\";\n\n    fetch(testURL).then((res) => setNASAImg(res.url));\n  }\n\n  useEffect(() => {\n    getNASAImg();\n  }, []);\n\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const latlon = lat + lng;\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by your browser\");\n    } else {\n      setStatus(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setStatus(null);\n          setLat(position.coords.latitude);\n          setLng(position.coords.longitude);\n        },\n        () => {\n          setStatus(\"Unable to retrieve your location\");\n        }\n      );\n    }\n  };\n\n  return (\n    <div>\n      <img style={{ height: 190, width: 190 }} src={NASAImg} />\n      <p>{status}</p>\n      {lat && <p>Latitude: {lat}</p>}\n      {lng && <p>Longitude: {lng}</p>}\n    </div>\n  );\n};\n\nexport default NASA;\n"]},"metadata":{},"sourceType":"module"}