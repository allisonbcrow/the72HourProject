{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [localweather, setLocalweather] = useState('');\n  const [query, setQuery] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [unit, setUnit] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(data => console.log(data));\n      });\n    }\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: main.temp(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, main.temp, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  }\n\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      temp(({\n        temp\n      } - 273.15).toFixed(0)); // const setTemp = (Math.round(temp));\n\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      temp((({\n        temp\n      } - 273.15) * 1.8 + 32).toFixed(0)); // setTemp=(Math.round(temp));\n\n      setUnit(oppositeUnit);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature!\", temp, unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert(),\n      children: [\"Convert to \", oppositeUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"value\",\n      children: [temp, unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Weather, \"BJ4grN09FPhdAzEd/Uc3wXn7psw=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","props","localweather","setLocalweather","query","setQuery","temp","setTemp","unit","setUnit","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","console","log","API_KEY","fetch","then","response","json","data","error","message","isLoaded","main","item","name","price","oppositeUnit","convert","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Weather(props) {\r\n  const [localweather, setLocalweather] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  const [temp, setTemp] = useState(0);\r\n  const [unit, setUnit] = useState('');\r\n\r\n   \r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const lon = position.coords.longitude;\r\n      const lat = position.coords.latitude;\r\n      console.log(lat);\r\n      console.log(lon);\r\n      const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n      })\r\n  }\r\n},[])\r\n\r\nif (error) {\r\n  return <div>Error: {error.message}</div>;\r\n} else if (!isLoaded) {\r\n  return <div>Loading...</div>;\r\n} else {\r\n  return (\r\n    <ul>\r\n      {main.temp(item => (\r\n        <li key={main.temp}>\r\n          {item.name} {item.price}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nconst oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n \r\n\r\nconst convert = () => {\r\n  if (unit === \"C\") {\r\n    temp(({temp} - 273.15).toFixed(0));\r\n    // const setTemp = (Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n\r\n\r\n  if (unit === \"F\") {\r\n    temp((({temp} - 273.15) * 1.8 + 32).toFixed(0));\r\n    // setTemp=(Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n};\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n        <p>Temperature!{temp}{unit}</p>\r\n        <button onClick={convert()}>Convert to {oppositeUnit}</button>\r\n        <span className=\"value\">{temp}{unit}</span>\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n  export default Weather;"]},"metadata":{},"sourceType":"module"}