{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [localweather, setLocalweather] = useState('');\n  const [query, setQuery] = useState('');\n  const [temp, setTemp] = useState();\n  const [unit, setUnit] = useState('');\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      const temp = localweather * 1.8 + 32;\n      setTemp(Math.round(temp));\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      const temp = (localweather - 32) * 5 / 9;\n      setTemp(Math.round(temp));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`).then(res => res.json()).then(result => {\n          setLocalweather(result.main.temp);\n          console.log(result);\n        });\n      });\n    }\n  }, []);\n  console.log(temp);\n  console.log(unit);\n  console.log(localweather);\n  console.log(query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"location\",\n      children: [weatherData.name, \", \\xA0\", weatherData.sys.country, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: \"weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), Math.round(weatherData.main.temp), \" \\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"fahrenheit\",\n      onClick: e => handleClick(e),\n      children: \"\\xB0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"celsius\",\n      onClick: e => handleClick(e),\n      children: \"\\xB0C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Conditions: \", weatherData.weather[0].main, \" - \", weatherData.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", Math.round(weatherData.main.temp), \" \\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Weather, \"+nzfhn569ALYLNr5qHQg4jFouvY=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","props","localweather","setLocalweather","query","setQuery","temp","setTemp","unit","setUnit","oppositeUnit","convert","Math","round","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","console","log","API_KEY","fetch","then","res","json","result","main","weatherData","name","sys","country","iconUrl","e","handleClick","weather","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Weather(props) {\r\n  const [localweather, setLocalweather] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  const [temp, setTemp] = useState();\r\n  const [unit, setUnit] = useState('');\r\n\r\n   \r\n\r\n\r\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n\r\nconst convert = () => {\r\n  if (unit === \"C\") {\r\n    const temp = localweather * 1.8 + 32;\r\n    setTemp(Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n\r\n\r\n  if (unit === \"F\") {\r\n    const temp = ((localweather - 32) * 5) / 9;\r\n    setTemp(Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const lon = position.coords.longitude;\r\n      const lat = position.coords.latitude;\r\n      console.log(lat);\r\n      console.log(lon);\r\n      const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setLocalweather(result.main.temp)\r\n          console.log(result)\r\n        })\r\n      })\r\n  }\r\n},[])\r\n\r\nconsole.log(temp)\r\nconsole.log(unit)\r\nconsole.log(localweather)\r\nconsole.log(query)\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n\r\n\r\n<p id=\"location\">\r\n                {weatherData.name}, &nbsp;\r\n                {weatherData.sys.country} \r\n                <img src={iconUrl} alt=\"weather icon\"></img>\r\n                {Math.round(weatherData.main.temp)} 째F\r\n            </p>\r\n            <button id=\"fahrenheit\" onClick={(e) => handleClick(e)}>째F</button>\r\n            <button id=\"celsius\" onClick={(e) => handleClick(e)}>째C</button>\r\n            <br></br><br></br>\r\n            <p>Conditions: {weatherData.weather[0].main} - {weatherData.weather[0].description}</p>\r\n            <p>Temperature: {Math.round(weatherData.main.temp)} 째F</p>\r\n        {/* <p>Temperature {props.temp} {setUnit}</p>\r\n        <button onClick={convert()}>Convert to {props.oppositeUnit}</button>\r\n        <span className=\"value\">{props.temp}{props.unit}</span> */}\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n  export default Weather;"]},"metadata":{},"sourceType":"module"}