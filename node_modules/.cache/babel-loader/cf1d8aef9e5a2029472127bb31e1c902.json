{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { geolocated } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [localweather, setLocalweather] = useState([]);\n  const [query, setQuery] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [unit, setUnit] = useState('');\n  const [newNum, setNewNum] = useState('');\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      const newNum = temp * 1.8 + 32;\n      setTemp(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n\n    if (unit === \"F\") {\n      const newNum = (temp - 32) * 5 / 9;\n      setTemp(Math.round(newNum));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  const getLonLat = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getLonLat,\n        children: \" Get Location \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this), \"Temperature \", props.newNum, \" \", props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert(),\n      children: [\"Convert to \", props.oppositeUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"value\",\n      children: [props.newNum, props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"BdLvG/Tms6aN/Sy2tnTw7QUiyEc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","geolocated","Weather","props","localweather","setLocalweather","query","setQuery","temp","setTemp","unit","setUnit","newNum","setNewNum","oppositeUnit","convert","Math","round","getLonLat","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","console","log","API_KEY","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAGA,QAAMe,YAAY,GAAGJ,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAA1C;;AAEA,QAAMK,OAAO,GAAG,MAAM;AAClB,QAAIL,IAAI,KAAK,GAAb,EAAkB;AACd,YAAME,MAAM,GAAGJ,IAAI,GAAG,GAAP,GAAa,EAA5B;AACAC,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWL,MAAX,CAAD,CAAP;AACAD,MAAAA,OAAO,CAACG,YAAD,CAAP;AACH;;AAED,QAAIJ,IAAI,KAAK,GAAb,EAAkB;AACd,YAAME,MAAM,GAAI,CAACJ,IAAI,GAAG,EAAR,IAAc,CAAf,GAAoB,CAAnC;AACAC,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWL,MAAX,CAAD,CAAP;AACAD,MAAAA,OAAO,CAACG,YAAD,CAAP;AACH;AACJ,GAZD;;AAcA,QAAMI,SAAS,GAAG,MAAM;AACtB,QAAGC,SAAS,CAACC,WAAb,EAA0B;AACxBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,cAAMO,OAAO,GAAG,kCAAhB;AACA,cAAMC,GAAG,GAAI,uDAAsDL,GAAI,QAAOH,GAAI,uBAAsBO,OAAQ,EAAhH;AACD,OAPD;AAQD;AACF,GAXD;;AAYA,sBACI;AAAA,4BACI;AAAA,8BACC;AAAQ,QAAA,OAAO,EAAEZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,kBAEiBf,KAAK,CAACS,MAFvB,OAEgCT,KAAK,CAACO,IAFtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,OAAO,EAAEK,OAAO,EAAxB;AAAA,gCAAwCZ,KAAK,CAACW,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,iBAAyBX,KAAK,CAACS,MAA/B,EAAuCT,KAAK,CAACO,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYC;;GAhDIR,O;;KAAAA,O;AAsDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { geolocated } from \"react-geolocated\";\r\n\r\nfunction Weather(props) {\r\n    const [localweather, setLocalweather] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [temp, setTemp] = useState(0);\r\n    const [unit, setUnit] = useState('');\r\n    const [newNum, setNewNum] = useState('');\r\n\r\n    \r\n    const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n    \r\n    const convert = () => {\r\n        if (unit === \"C\") {\r\n            const newNum = temp * 1.8 + 32;\r\n            setTemp(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    \r\n        if (unit === \"F\") {\r\n            const newNum = ((temp - 32) * 5) / 9;\r\n            setTemp(Math.round(newNum));\r\n            setUnit(oppositeUnit);\r\n        }\r\n    };\r\n    \r\n    const getLonLat = () => {\r\n      if(navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const lon = position.coords.longitude;\r\n          const lat = position.coords.latitude;\r\n          console.log(lat);\r\n          console.log(lon);\r\n          const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n          const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\r\n        })\r\n      }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>\r\n            {<button onClick={getLonLat}> Get Location </button>}\r\n                Temperature {props.newNum} {props.unit}\r\n            </p>\r\n            <button onClick={convert()}>Convert to {props.oppositeUnit}</button>\r\n            <span className=\"value\">{props.newNum}{props.unit}</span>\r\n  \r\n        </div>\r\n  \r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}