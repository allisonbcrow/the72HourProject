{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  state = {\n    lat: undefined,\n    lon: undefined,\n    city: undefined,\n    temperatureC: undefined,\n    temperatureF: undefined,\n    icon: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    errorMessage: undefined\n  };\n\n  getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  getWeather = async (latititude, longitude) => {\n    const api_call = await fetch(`//api.openweathermap.org/data/2.5/weather?;at=${latititude}&lon=${longitude}&appid=${process.env.WEATHER_API_KEY}&units=metric`);\n    const data = await api_call.json();\n    this.setState({\n      lat: latititude,\n      lon: longitude,\n      city: data.name,\n      temperatureC: Math.round(data.main.temp),\n      temperatureF: Math.round(data.main.temp * 1.8 + 32),\n      icon: data.weather[0].icon,\n      sunrise: SVGAnimateMotionElement.unix(Data.sys.sunrise).format(\"hh:mm a\"),\n      sunset: SVGAnimateMotionElement.unix(data.sys.sunset).format(\"hh:mm a\")\n    });\n  };\n\n  const {\n    city,\n    temperatureC,\n    temperatureF,\n    icon,\n    sunrise,\n    sunset\n  } = this.state;\n\n  city => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-item\",\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-item\",\n          children: [temperatureC, \" \\xB0C \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slash\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 61\n          }, this), \" \", temperatureF, \" \\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"weather-icon\",\n            src: `http://openweathermap.org/img/w/${icon}.png`,\n            alt: \"weather icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather=item\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"sunrise: \", sunrise]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-item\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"sunset: \", sunset]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","Component","render","Weather","state","lat","undefined","lon","city","temperatureC","temperatureF","icon","sunrise","sunset","errorMessage","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","latititude","longitude","api_call","fetch","process","env","WEATHER_API_KEY","data","json","setState","name","Math","round","main","temp","weather","SVGAnimateMotionElement","unix","Data","sys","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { render } from 'react-dom';\r\n\r\n\r\nconst Weather = () => {\r\nstate = {\r\n  lat: undefined,\r\n  lon: undefined,\r\n  city: undefined,\r\n  temperatureC: undefined,\r\n  temperatureF: undefined,\r\n  icon: undefined,\r\n  sunrise: undefined,\r\n  sunset: undefined,\r\n  errorMessage: undefined,\r\n}\r\n\r\ngetPosition = () => {\r\n  return new Promise(function (resolve, reject) {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n  });\r\n}\r\ngetWeather = async (latititude, longitude) => {\r\n  const api_call = await fetch(`//api.openweathermap.org/data/2.5/weather?;at=${latititude}&lon=${longitude}&appid=${process.env.WEATHER_API_KEY}&units=metric`);\r\n  const data = await api_call.json();\r\n  this.setState({\r\n    lat: latititude,\r\n    lon: longitude,\r\n    city: data.name,\r\n    temperatureC: Math.round(data.main.temp),\r\n    temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n    icon: data.weather[0].icon,\r\n    sunrise: SVGAnimateMotionElement.unix(Data.sys.sunrise).format(\"hh:mm a\"),\r\n    sunset: SVGAnimateMotionElement.unix(data.sys.sunset).format(\"hh:mm a\"),\r\n  })\r\n}\r\n\r\n\r\n  const {city, temperatureC, temperatureF, icon, sunrise, sunset} = this.state;\r\n   (city) => {\r\n    <div className=\"App\">\r\n      <div className=\"weather-box\">\r\n        <div className=\"weather-item\">{city}</div>\r\n        <div className=\"weather-item\">{temperatureC} &deg;C <span className=\"slash\">/</span> {temperatureF} &deg;F</div>\r\n        <div>\r\n          <img className=\"weather-icon\" src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"weather icon\"/>\r\n      </div>\r\n      <div className=\"weather=item\">\r\n        <span>sunrise: {sunrise}</span>\r\n      </div>\r\n      <div className=\"weather-item\">\r\n        <span>sunset: {sunset}</span>\r\n      </div>\r\n    </div>\r\n    </div>\r\n   }};\r\n\r\n\r\n\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}