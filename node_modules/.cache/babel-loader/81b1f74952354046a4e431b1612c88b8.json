{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nconst NASA = () => {\n  _s();\n\n  const [satellite, setSatellite] = useState([]);\n\n  const fetchSatellite = () => {\n    let url = `${baseURL}?api-key=${key}`;\n    url = latitude ? url + `&latitude=${latitude}` : url;\n    url = longitude ? url + `&longitude=${longitude}` : url;\n    fetch(url).then(res => res.json()).then(data => setSatellite(data.response.docs));\n  };\n\n  const showImg = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: satellite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NASA, \"B86id/bMS9+gXrktKn7GbFiPvWg=\");\n\n_c = NASA;\nexport default NASA;\n\nvar _c;\n\n$RefreshReg$(_c, \"NASA\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/the72HourProject/src/components/apps/NASA.js"],"names":["React","useState","baseURL","key","NASA","satellite","setSatellite","fetchSatellite","url","latitude","longitude","fetch","then","res","json","data","response","docs","showImg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,MAAMC,OAAO,GAAG,8CAAhB;AACA,MAAMC,GAAG,GAAG,yEAAZ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,cAAc,GAAG,MAAM;AACzB,QAAIC,GAAG,GAAI,GAAEN,OAAQ,YAAWC,GAAI,EAApC;AAEAK,IAAAA,GAAG,GAAGC,QAAQ,GAAGD,GAAG,GAAI,aAAYC,QAAS,EAA/B,GAAmCD,GAAjD;AACAA,IAAAA,GAAG,GAAGE,SAAS,GAAGF,GAAG,GAAI,cAAaE,SAAU,EAAjC,GAAqCF,GAApD;AAEAG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIT,YAAY,CAACS,IAAI,CAACC,QAAL,CAAcC,IAAf,CAF1B;AAGH,GATD;;AAWA,QAAMC,OAAO,GAAG,MAAM,CAErB,CAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEb;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAzBD;;GAAMD,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nconst baseURL = 'https://api.nasa.gov/planetary/earth/imagery';\nconst key = 'sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC';\n\nconst NASA = () => {\n    const [satellite, setSatellite] = useState([])\n\n    const fetchSatellite = () => {\n        let url = `${baseURL}?api-key=${key}`;\n\n        url = latitude ? url + `&latitude=${latitude}` : url;\n        url = longitude ? url + `&longitude=${longitude}` : url;\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => setSatellite(data.response.docs))\n    };\n\n    const showImg = () => {\n\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"mainDiv\">\n                <img src={satellite} />\n            </div>\n        </div>\n    );\n};\nexport default NASA;"]},"metadata":{},"sourceType":"module"}