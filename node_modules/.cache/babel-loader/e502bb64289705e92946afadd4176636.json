{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElevenFiftyBlueBadge\\\\72hourproj\\\\src\\\\components\\\\apps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const [localweather, setLocalweather] = useState('');\n  const [query, setQuery] = useState('');\n  const [temp, setTemp] = useState(results.main.temp);\n  const [unit, setUnit] = useState('');\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\n\n  const convert = () => {\n    if (unit === \"C\") {\n      const temp = localweather * 1.8 + 32;\n      setTemp(Math.round(temp));\n      setUnit(oppositeUnit);\n    }\n\n    console.log(temp);\n\n    if (unit === \"F\") {\n      const temp = (localweather - 32) * 5 / 9;\n      setTemp(Math.round(temp));\n      setUnit(oppositeUnit);\n    }\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lon = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat);\n        console.log(lon);\n        const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`).then(response => response.json()).then(result => {\n          setLocalweather(result.main.temp);\n          return;\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature \", temp, \" \", props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert(),\n      children: [\"Convert to \", props.oppositeUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"value\",\n      children: [props.temp, props.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Weather, \"QeL76WbtBuKoiF/kUHydm/9qhAI=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/ElevenFiftyBlueBadge/72hourproj/src/components/apps/Weather.js"],"names":["React","useState","useEffect","Weather","props","localweather","setLocalweather","query","setQuery","temp","setTemp","results","main","unit","setUnit","oppositeUnit","convert","Math","round","console","log","navigator","geolocation","getCurrentPosition","position","lon","coords","longitude","lat","latitude","API_KEY","fetch","then","response","json","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,OAAO,CAACC,IAAR,CAAaH,IAAd,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAMc,YAAY,GAAGF,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAA1C;;AAGF,QAAMG,OAAO,GAAG,MAAM;AACpB,QAAIH,IAAI,KAAK,GAAb,EAAkB;AAChB,YAAMJ,IAAI,GAAGJ,YAAY,GAAG,GAAf,GAAqB,EAAlC;AACAK,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAD,CAAP;AACAK,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AAEA,QAAII,IAAI,KAAK,GAAb,EAAkB;AAChB,YAAMJ,IAAI,GAAI,CAACJ,YAAY,GAAG,EAAhB,IAAsB,CAAvB,GAA4B,CAAzC;AACAK,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAD,CAAP;AACAK,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD;AACF,GAbD;;AAeAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,cAAMK,OAAO,GAAG,kCAAhB;AACAC,QAAAA,KAAK,CAAE,uDAAsDH,GAAI,QAAOH,GAAI,uBAAsBK,OAAQ,EAArG,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACd7B,UAAAA,eAAe,CAAC6B,MAAM,CAACvB,IAAP,CAAYH,IAAb,CAAf;AACA;AACD,SALH;AAMC,OAZH;AAaD;AACF,GAhBQ,EAgBP,EAhBO,CAAT;AAoBI,sBACE;AAAA,4BACE;AAAA,iCAAgBA,IAAhB,OAAuBL,KAAK,CAACS,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEG,OAAO,EAAxB;AAAA,gCAAwCZ,KAAK,CAACW,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,iBAAyBX,KAAK,CAACK,IAA/B,EAAqCL,KAAK,CAACS,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH;;GAtDQV,O;;KAAAA,O;AAyDP,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Weather(props) {\r\n  const [localweather, setLocalweather] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  const [temp, setTemp] = useState(results.main.temp);\r\n  const [unit, setUnit] = useState('');\r\n\r\n\r\n  const oppositeUnit = unit === \"C\" ? \"F\" : \"C\";\r\n\r\n\r\nconst convert = () => {\r\n  if (unit === \"C\") {\r\n    const temp = localweather * 1.8 + 32;\r\n    setTemp(Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n  console.log(temp)\r\n\r\n  if (unit === \"F\") {\r\n    const temp = ((localweather - 32) * 5) / 9;\r\n    setTemp(Math.round(temp));\r\n    setUnit(oppositeUnit);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const lon = position.coords.longitude;\r\n      const lat = position.coords.latitude;\r\n      console.log(lat);\r\n      console.log(lon);\r\n      const API_KEY = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setLocalweather(result.main.temp)\r\n          return;\r\n        })\r\n      })\r\n  }\r\n},[])\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p>Temperature {temp} {props.unit}</p>\r\n        <button onClick={convert()}>Convert to {props.oppositeUnit}</button>\r\n        <span className=\"value\">{props.temp}{props.unit}</span>\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n  export default Weather;"]},"metadata":{},"sourceType":"module"}