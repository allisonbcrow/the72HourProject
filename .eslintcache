[{"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\index.js":"1","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\app.js":"2","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\reportWebVitals.js":"3","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Header.js":"4","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Footer.js":"5","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Sidebar.js":"6","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Home.js":"7","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\Ticketmaster.js":"8","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\NASA.js":"9","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\Weather.js":"10","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\concepts\\Geolocation.js":"11"},{"size":517,"mtime":1630000632849,"results":"12","hashOfConfig":"13"},{"size":492,"mtime":1630099170556,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1630000632851,"results":"15","hashOfConfig":"13"},{"size":579,"mtime":1630000632844,"results":"16","hashOfConfig":"13"},{"size":264,"mtime":1630000632843,"results":"17","hashOfConfig":"13"},{"size":2511,"mtime":1630099891410,"results":"18","hashOfConfig":"13"},{"size":421,"mtime":1630099976145,"results":"19","hashOfConfig":"13"},{"size":1734,"mtime":1630123580855,"results":"20","hashOfConfig":"13"},{"size":130,"mtime":1630000632838,"results":"21","hashOfConfig":"13"},{"size":3005,"mtime":1630000632839,"results":"22","hashOfConfig":"13"},{"size":196,"mtime":1630006832408,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kdr4bn",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\index.js",[],["50","51"],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\app.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\reportWebVitals.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Header.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Footer.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Sidebar.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\site\\Home.js",["52","53","54"],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\Ticketmaster.js",["55","56"],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\NASA.js",[],"C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\apps\\Weather.js",["57","58","59","60","61","62","63"],"import React, { useState } from 'react';\r\n\r\nconst baseURL = 'api.openweathermap.org/data/2.5/weather?;';\r\nconst key = '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n\r\n\r\nconst Weather = () => {\r\n  const [latitude, setlatitude] = useState('');\r\n  const [longitude, setlongitude] = useState('');\r\n  const [city, setcity] = useState('');\r\n  const [temperature, setTemperature] = useState([]);\r\n\r\n\r\n  const fetchResults = () => {\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=indianapolis&appid=${key}`;\r\n    // let url = `${baseURL}at=${latitude}&lon=${longitude}&appid=${key}&units=metric`\r\n    url = latitude ? url + `&latitude=${latitude}` : url;\r\n    url = longitude ? url + `&longitude=${longitude}` : url;\r\n  }\r\n\r\n  let fetchURL = async () => {\r\n    let response = await fetch(baseURL);\r\n    let data = await response.json();\r\n    setTemperature(data.main.temp);\r\n  };\r\n\r\n          return (\r\n            <div className=\"main\">\r\n              <div className=\"mainDiv\">\r\n                <div className=\"weather-item\">{temperature} </div>\r\n              </div>\r\n            </div>\r\n          )\r\n};\r\n\r\n\r\n// getPosition = () => {\r\n//   return new Promise(function (resolve, reject) {\r\n//     navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//   });\r\n// }\r\n// getWeather = async (latitude, longitude) => {\r\n//   let WEATHER_API_KEY= '3b66b0c3c2f2e8c4e63630359492b5bf';\r\n//   const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?;at=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\r\n//   const data = await api_call.json();\r\n\r\n\r\n//   this.setState({\r\n//     lat: latitude,\r\n//     lon: longitude,\r\n//     city: data.name,\r\n//     temperatureC: Math.round(data.main.temp),\r\n//     temperatureF: Math.round((data.main.temp) * 1.8 + 32),\r\n//     icon: data.weather[0].icon,  \r\n//   })\r\n// }\r\n\r\n// componentDidMount() {\r\n//   this.getPosition()\r\n//   .then((position) => {\r\n//     this.getWeather(position.coords.latitude, position.coords.longitude)\r\n//   })\r\n//   .catch((err) => {\r\n//     this.setState({ errorMessage: err.message });\r\n//   });\r\n\r\n//   this.timerID = setInterval(\r\n//     () => \r\n//     this.getWeather(this.state.lat, this.state.lon),\r\n//     60000\r\n//   );\r\n// }\r\n\r\n// componentWillUnmount() {\r\n//   clearInterval(this.timerID);\r\n// }\r\n\r\n// render() {\r\n//   const { city, temperatureC, temperatureF, icon} = this.state;\r\n//    if (city) {\r\n//      return (\r\n//     <div className=\"App\">\r\n//       <div className=\"weather-box\">\r\n//         <div className=\"weather-item\">{city}</div>\r\n//         <div className=\"weather-item\">{temperatureC} &deg;C <span className=\"slash\">/</span> {temperatureF} &deg;F</div>\r\n//         <div>\r\n//           <img className=\"weather-icon\" src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"weather icon\"/>\r\n//       </div>\r\n//     </div>\r\n//     </div>\r\n//      );\r\n//    }\r\n//   else {\r\n//     return (\r\n//       <div>Loading...</div>\r\n//     )\r\n//   }}}\r\n\r\n\r\n\r\n\r\nexport default Weather;\r\n","C:\\Users\\mmrah\\OneDrive\\Desktop\\ElevenFiftyProjects\\Blue\\blue-badge-folder-setup-2\\the72HourProject\\src\\components\\concepts\\Geolocation.js",["64","65"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Geolocation = () => {\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\n\r\nexport default Geolocation;",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":15},{"ruleId":"72","severity":1,"message":"78","line":1,"column":26,"nodeType":"74","messageId":"75","endLine":1,"endColumn":35},{"ruleId":"72","severity":1,"message":"79","line":8,"column":11,"nodeType":"74","messageId":"75","endLine":8,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":8,"column":20,"nodeType":"74","messageId":"75","endLine":8,"endColumn":31},{"ruleId":"72","severity":1,"message":"81","line":9,"column":21,"nodeType":"74","messageId":"75","endLine":9,"endColumn":33},{"ruleId":"72","severity":1,"message":"82","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"83","line":10,"column":16,"nodeType":"74","messageId":"75","endLine":10,"endColumn":23},{"ruleId":"72","severity":1,"message":"84","line":14,"column":9,"nodeType":"74","messageId":"75","endLine":14,"endColumn":21},{"ruleId":"72","severity":1,"message":"85","line":18,"column":5,"nodeType":"74","messageId":"75","endLine":18,"endColumn":8},{"ruleId":"72","severity":1,"message":"86","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":15},{"ruleId":"72","severity":1,"message":"87","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"78","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"68","replacedBy":"88"},{"ruleId":"70","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'NASA' is defined but never used.","Identifier","unusedVar","'Ticketmaster' is defined but never used.","'Weather' is defined but never used.","'useEffect' is defined but never used.","'latlon' is assigned a value but never used.","'setlatitude' is assigned a value but never used.","'setlongitude' is assigned a value but never used.","'city' is assigned a value but never used.","'setcity' is assigned a value but never used.","'fetchResults' is assigned a value but never used.","'url' is assigned a value but never used.","'fetchURL' is assigned a value but never used.","'useState' is defined but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]